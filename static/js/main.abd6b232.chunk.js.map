{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","Api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","props","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abd6b232.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conatiner\":\"Cards_conatiner__37ADY\",\"card\":\"Cards_card__1S4Ur\",\"infected\":\"Cards_infected__3IxR9\",\"recovered\":\"Cards_recovered__3nLU4\",\"deaths\":\"Cards_deaths__37ViT\"};","import React from 'react'\r\n//we will use material ui it prevents from excessive use of css\r\nimport { Card,CardContent,Typography,Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nfunction Cards(props)\r\n{\r\n // console.log(props);\r\n   const {data} =props;\r\n   const { confirmed ,recovered,deaths,lastUpdate } =data;\r\n   if(!confirmed)\r\n   {\r\n       return (\r\n           <div> loading.....</div>\r\n       )\r\n   }\r\n   return (\r\n       <div className='styles.container'> \r\n        <Grid container spacing={3} justify=\"center\">\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom> INFECTED</Typography>\r\n                     <Typography variant=\"h5\" >\r\n                         <CountUp start={0}  end={confirmed.value}  duration={2.5} separator=\",\" />                                              \r\n                         </Typography>\r\n                     <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                     <Typography variant=\"body2\" >Total number of active cases of COVID-19 till date</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n              <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom> RECOVERED</Typography>\r\n                     <Typography variant=\"h5\" >\r\n                     <CountUp start={0}  end={recovered.value}  duration={2.5} separator=\",\" />                         \r\n                         </Typography>\r\n                     <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                     <Typography variant=\"body2\" >Number of cases recovered from COVID-19</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n              <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom> DEATHS</Typography>\r\n                     <Typography variant=\"h5\" >\r\n                     <CountUp start={0}  end={deaths.value}  duration={2.5} separator=\",\" />\r\n                         </Typography>\r\n                     <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                     <Typography variant=\"body2\" >Deaths Caused by COVID-19</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n        </Grid>\r\n       </div>\r\n   ) \r\n}\r\n\r\nexport default Cards","import axios from 'axios';\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n \r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  }\r\n   catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\n\r\nimport { fetchDailyData } from '../../Api';\r\n\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n      setDailyData(initialDailyData);\r\n    };\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n   \r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              \r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n           \r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {            \r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n        },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null\r\n);\r\nreturn (\r\n  <div className={styles.container}>\r\n    {country ? barChart : lineChart}\r\n  </div>\r\n);\r\n};\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../../Api';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n \r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n   \r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };   \r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        \r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default Countries;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport { fetchData } from './Api/';\r\nimport styles from './App.module.css';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n   \r\n    const data = await fetchData();    \r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {   \r\n    const data = await fetchData(country);   \r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        \r\n       \r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__19D9E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__1MraV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3oYvt\"};"],"sourceRoot":""}